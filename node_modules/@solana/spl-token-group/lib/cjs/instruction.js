"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createInitializeMemberInstruction = exports.createUpdateGroupAuthorityInstruction = exports.createUpdateGroupMaxSizeInstruction = exports.createInitializeGroupInstruction = void 0;
const codecs_1 = require("@solana/codecs");
const spl_type_length_value_1 = require("@solana/spl-type-length-value");
const web3_js_1 = require("@solana/web3.js");
function getInstructionEncoder(discriminator, dataEncoder) {
    return (0, codecs_1.mapEncoder)((0, codecs_1.getTupleEncoder)([(0, codecs_1.getBytesEncoder)(), dataEncoder]), (data) => [
        discriminator,
        data,
    ]);
}
function getPublicKeyEncoder() {
    return (0, codecs_1.mapEncoder)((0, codecs_1.getBytesEncoder)({ size: 32 }), (publicKey) => publicKey.toBytes());
}
function createInitializeGroupInstruction(args) {
    const { programId, group, mint, mintAuthority, updateAuthority, maxSize } = args;
    return new web3_js_1.TransactionInstruction({
        programId,
        keys: [
            { isSigner: false, isWritable: true, pubkey: group },
            { isSigner: false, isWritable: false, pubkey: mint },
            { isSigner: true, isWritable: false, pubkey: mintAuthority },
        ],
        data: Buffer.from(getInstructionEncoder((0, spl_type_length_value_1.splDiscriminate)('spl_token_group_interface:initialize_token_group'), (0, codecs_1.getStructEncoder)([
            ['updateAuthority', getPublicKeyEncoder()],
            ['maxSize', (0, codecs_1.getU32Encoder)()],
        ])).encode({ updateAuthority: updateAuthority !== null && updateAuthority !== void 0 ? updateAuthority : web3_js_1.SystemProgram.programId, maxSize })),
    });
}
exports.createInitializeGroupInstruction = createInitializeGroupInstruction;
function createUpdateGroupMaxSizeInstruction(args) {
    const { programId, group, updateAuthority, maxSize } = args;
    return new web3_js_1.TransactionInstruction({
        programId,
        keys: [
            { isSigner: false, isWritable: true, pubkey: group },
            { isSigner: true, isWritable: false, pubkey: updateAuthority },
        ],
        data: Buffer.from(getInstructionEncoder((0, spl_type_length_value_1.splDiscriminate)('spl_token_group_interface:update_group_max_size'), (0, codecs_1.getStructEncoder)([['maxSize', (0, codecs_1.getU32Encoder)()]])).encode({ maxSize })),
    });
}
exports.createUpdateGroupMaxSizeInstruction = createUpdateGroupMaxSizeInstruction;
function createUpdateGroupAuthorityInstruction(args) {
    const { programId, group, currentAuthority, newAuthority } = args;
    return new web3_js_1.TransactionInstruction({
        programId,
        keys: [
            { isSigner: false, isWritable: true, pubkey: group },
            { isSigner: true, isWritable: false, pubkey: currentAuthority },
        ],
        data: Buffer.from(getInstructionEncoder((0, spl_type_length_value_1.splDiscriminate)('spl_token_group_interface:update_authority'), (0, codecs_1.getStructEncoder)([['newAuthority', getPublicKeyEncoder()]])).encode({ newAuthority: newAuthority !== null && newAuthority !== void 0 ? newAuthority : web3_js_1.SystemProgram.programId })),
    });
}
exports.createUpdateGroupAuthorityInstruction = createUpdateGroupAuthorityInstruction;
function createInitializeMemberInstruction(args) {
    const { programId, member, memberMint, memberMintAuthority, group, groupUpdateAuthority } = args;
    return new web3_js_1.TransactionInstruction({
        programId,
        keys: [
            { isSigner: false, isWritable: true, pubkey: member },
            { isSigner: false, isWritable: false, pubkey: memberMint },
            { isSigner: true, isWritable: false, pubkey: memberMintAuthority },
            { isSigner: false, isWritable: true, pubkey: group },
            { isSigner: true, isWritable: false, pubkey: groupUpdateAuthority },
        ],
        data: Buffer.from(getInstructionEncoder((0, spl_type_length_value_1.splDiscriminate)('spl_token_group_interface:initialize_member'), (0, codecs_1.getStructEncoder)([])).encode({})),
    });
}
exports.createInitializeMemberInstruction = createInitializeMemberInstruction;
//# sourceMappingURL=instruction.js.map